plugins {
	id 'fabric-loom' version '1.1-SNAPSHOT'
	id 'maven-publish'
  id 'jacoco'
  id 'checkstyle'
  id 'com.github.spotbugs' version '5.0.13'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com/releases/" }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Cloth Config
    modApi("me.shedaniel.cloth:cloth-config-fabric:9.0.94") {
        exclude(group: "net.fabricmc", module: 'fabric-loader')
        exclude(group: "net.fabricmc.fabric-api")
    }

    // Modmenu
    modImplementation("com.terraformersmc:modmenu:5.1.0-beta.4") {
        exclude(group: "net.fabricmc", module: 'fabric-loader')
    }

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.

    testImplementation "net.fabricmc:fabric-loader-junit:${project.loader_version}"
    testImplementation(platform('org.junit:junit-bom:5.9.2'))
    testImplementation('org.junit.jupiter:junit-jupiter')

    testImplementation "com.google.truth:truth:${project.truth_version}"
    testImplementation "com.google.truth.extensions:truth-java8-extension:${project.truth_version}"

    // Work around bad interaction between MC's use of Guava and Truth's
    testRuntimeOnly "com.google.guava:guava:30.1-jre"

    // Include SpotBugs annotations for compilation of main and test
    compileOnly "com.github.spotbugs:spotbugs-annotations:${project.spotbugs_version}"
    testCompileOnly "com.github.spotbugs:spotbugs-annotations:${project.spotbugs_version}"
}

processResources {
  inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

checkstyle {
    config = resources.text.fromArchiveEntry(configurations.checkstyle[0], 'google_checks.xml')
    maxErrors = 0
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
    testLogging {
        events "passed", "skipped", "failed"
    }
}

spotbugs {
  toolVersion = project.spotbugs_version
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

task copyToLocalMinecraft(type: Copy, dependsOn: [build]) {
  from project.remapJar
  into "${System.properties["user.home"]}/Library/Application Support/minecraft/mods"
}
